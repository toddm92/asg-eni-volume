{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description"	: "Creates a single ASG environment for launching ubuntu instances across 3 AZs/subnets. Attaches a second EBS Volume and Network Interface via bash scripts in UserData.",

  "Metadata" : {

    "AWS::CloudFormation::Interface" : {
    "ParameterGroups" : [
      {
        "Label"                         : { "default" : "Instance Config" },
        "Parameters"                    : [ "VPCStackName", "IAMStackName", "InstanceType", "InstanceAMI", "UserKeys" ]
      },
      {
        "Label"                         : { "default" : "Notification" },
        "Parameters"                    : [ "SNSEmail" ]
      }
    ],
    "ParameterLabels" : {
        "VPCStackName"                  : { "default" : "VPC stack" },
        "IAMStackName"                  : { "default" : "Stack containing IAM/KMS resources" },
        "InstanceType"                  : { "default" : "Instance type" },
        "InstanceAMI"                   : { "default" : "Instance AMI" },
        "UserKeys"                      : { "default" : "Instance PEM keys" },
        "SNSEmail"                      : { "default" : "Alarm email address" }
      }
    }
  },

  "Parameters" : {

    "VPCStackName" : {
      "Type"                            : "String",
      "Default"                         : "zook-test-vpc",
      "AllowedPattern"                  : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "MinLength"                       : 1,
      "MaxLength"                       : 255,
      "Description"                     : "Name of our VPC CFN stack."
    },
    "IAMStackName" : {
      "Type"                            : "String",
      "Default"                         : "zook-test-iam",
      "AllowedPattern"                  : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "MinLength"                       : 1,
      "MaxLength"                       : 255,
      "Description"                     : "Name of the CFN stack containing our IAM and KMS resources."
    },
    "InstanceType" : {
        "Type"                          : "String",
        "Default"                       : "t2.micro",
        "AllowedValues"                 : ["t2.micro", "t2.small", "t2.medium", "t2.large"],
        "Description"                   : "Instance type and size."
    },
    "InstanceAMI" : {
        "Type"                          : "AWS::EC2::Image::Id",
        "Default"                       : "ami-80861296",
        "Description"                   : "Your instance image."
    },
    "UserKeys" : {
        "Type"                          : "AWS::EC2::KeyPair::KeyName",
        "Description"                   : "Your instance key pair name."
    },
    "SNSEmail" : {
        "Type"                          : "String",
        "Default"                       : "todd@evident.io",
        "AllowedPattern"                : "[-a-z0-9]*\\@[-a-z0-9]*\\.[a-z]*",
        "Description"                   : "Where alarms should be sent."
    }
  },

  "Resources" : {

    "snsASTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "TopicName"                     : { "Fn::Join" : ["-", [ { "Ref" : "AWS::StackName"}, "zookeeper" ] ] },
        "Subscription"                  : [
          {
          "Endpoint"                    : { "Ref" : "SNSEmail" },
          "Protocol"                    : "email"
          }
        ]
      }
    },

    "alcServerlaunch" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
        "Metadata" : {
          "AWS::CloudFormation::Init" : {
            "config" : {
              "files" : {
                "/etc/cfn/cfn-hup.conf" : {
                  "content" : { "Fn::Join" : [ "", [
                    "[main]\n",
                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                    "region=", { "Ref" : "AWS::Region" }, "\n"
                  ] ] },
                  "mode"    : "000400",
                  "owner"   : "root",
                  "group"   : "root"
                },
                "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                  "content": { "Fn::Join" : [ "", [
                    "[cfn-auto-reloader-hook]\n",
                    "triggers=post.update\n",
                    "path=Resources.alcServerlaunch.Metadata.AWS::CloudFormation::Init\n",
                    "action=/opt/aws/bin/cfn-init -v ",
                    " --stack ", { "Ref" : "AWS::StackName" },
                    " --resource alcServerlaunch ",
                    " --region ", { "Ref" : "AWS::Region" }, "\n",
                    "runas=root\n"
                  ] ] },
                  "mode"    : "000400",
                  "owner"   : "root",
                  "group"   : "root"
                }
              },
              "services" : {
                "sysvinit" : {
                  "cfn-hup" : {
                    "enabled" : "true",
                    "ensureRunning" : "true",
                    "files" : [ "/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf" ]
              } } }
            }
          }
        },
      "Properties" : {
        "ImageId"                       : { "Ref" : "InstanceAMI" },
        "KeyName"                       : { "Ref" : "UserKeys" },
        "InstanceType"                  : { "Ref" : "InstanceType" },
        "SecurityGroups"                : [ { "Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-SecurityGroup" } } ],
        "IamInstanceProfile"            : { "Fn::ImportValue" : {"Fn::Sub": "${IAMStackName}-InstanceProfile" } },
        "AssociatePublicIpAddress"      : "false",
        "UserData" : {
          "Fn::Base64" : {
            "Fn::Join" : [ "", [
              "#!/bin/bash", "\n",
              "apt-get update", "\n",
              "apt-get -y install awscli", "\n",
              "apt-get -y install python-pip", "\n",
              "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz", "\n",
              "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup", "\n",
              "chmod +x /etc/init.d/cfn-hup", "\n",
              "update-rc.d cfn-hup defaults", "\n",
              "service cfn-hup start", "\n",
              "sleep 60", "\n",

              "wget https://s3.amazonaws.com/todd-zook-pub/bind_eni.sh", "\n",
              "wget https://s3.amazonaws.com/todd-zook-pub/bind_ebs.sh", "\n",
              "wget https://s3.amazonaws.com/todd-zook-pub/clean_up.sh", "\n",
              "chmod +x bind_eni.sh", "\n",
              "chmod +x bind_ebs.sh", "\n",
              "chmod +x clean_up.sh", "\n",

              "./bind_eni.sh ", {"Ref" : "AWS::Region"}, " ",
               {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-SecurityGroup"}}, " ",
               {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-Service"}}, "\n",

              "./bind_ebs.sh ", {"Ref" : "AWS::Region"}, " ",
               {"Fn::ImportValue" : {"Fn::Sub": "${IAMStackName}-EBSKeyArn"}}, " ",
               {"Ref": "snsASTopic"}, " ",
               {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-Service"}}, "\n",

              "./clean_up.sh ", {"Ref" : "AWS::Region"}, " ",
               {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-Service"}}, "\n",

              "/usr/local/bin/cfn-init",
              " --stack ", { "Ref": "AWS::StackName" },
              " --resource asgServergroup",
              " --region ", { "Ref": "AWS::Region" }, "\n",

              "/usr/local/bin/cfn-signal -e 0 --stack ", { "Ref": "AWS::StackName" },
              " --resource asgServergroup",
              " --region ", { "Ref": "AWS::Region" }, "\n"
              ]
            ]
          }
        }
      }
    },

    "asgServergroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn" : [ "snsASTopic" ],
      "Properties" : {
        "VPCZoneIdentifier"             : [{"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-PriSubnetAZ1"}}, {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-PriSubnetAZ2"}}, {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-PriSubnetAZ3"}}],
        "Cooldown"                      : "300",
        "DesiredCapacity"               : "3",
        "MaxSize"                       : "3",
        "MinSize"                       : "2",
        "HealthCheckType"               : "EC2",
        "HealthCheckGracePeriod"        : "180",
        "LaunchConfigurationName"       : { "Ref" : "alcServerlaunch" },
        "Tags": [
          { "Key" : "Service", "Value" : {"Fn::ImportValue" : {"Fn::Sub": "${VPCStackName}-Service"}}, "PropagateAtLaunch" : true },
          { "Key" : "Name", "Value"  : "zook-test", "PropagateAtLaunch" : true }
        ],
        "NotificationConfiguration" : {
          "TopicARN"          : { "Ref" : "snsASTopic" },
          "NotificationTypes" : [ 
             "autoscaling:EC2_INSTANCE_LAUNCH",
             "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
             "autoscaling:EC2_INSTANCE_TERMINATE",
             "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ] 
        }
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
        "Count"                         : "3",
        "Timeout"                       : "PT15M"
        }
      },
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
          "MinInstancesInService"       : "2", 
          "MaxBatchSize"                : "1",
          "PauseTime"                   : "PT15M",
          "WaitOnResourceSignals"       : "true"
        }
      }
    },

    "aspServerscaleUP" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "DependsOn" : [ "asgServergroup" ],
      "Properties" : {
      "AdjustmentType"                  : "ChangeInCapacity",
      "AutoScalingGroupName"            : { "Ref" : "asgServergroup" },
      "Cooldown"                        : "300",
      "ScalingAdjustment"               : "3"
      }
    },
    "aspServerscaleDN" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "DependsOn" : [ "asgServergroup" ],
      "Properties" : {
      "AdjustmentType"                  : "ChangeInCapacity",
      "AutoScalingGroupName"            : { "Ref" : "asgServergroup" },
      "ScalingAdjustment"               : "-3"
      }
    },

    "monServeralarmLow" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "DependsOn" : [ "asgServergroup", "aspServerscaleUP" ],
      "Properties" : {
      "MetricName"                      : "HealthyHostCount",
      "Namespace"                       : "AWS/EC2",
      "Statistic"                       : "Maximum",
      "Period"                          : "60",
      "EvaluationPeriods"               : "2",
      "Threshold"                       : "2",
      "AlarmActions"                    : [ { "Ref" : "aspServerscaleUP" } ],
      "Dimensions"                      : [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "asgServergroup" } } ],
      "ComparisonOperator"              : "LessThanOrEqualToThreshold"
      }
    },
    "monServeralarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "DependsOn" : [ "asgServergroup", "aspServerscaleDN" ],
      "Properties" : {
      "MetricName"                      : "HealthyHostCount",
      "Namespace"                       : "AWS/EC2",
      "Statistic"                       : "Maximum",
      "Period"                          : "60",
      "EvaluationPeriods"               : "2",
      "Threshold"                       : "3",
      "AlarmActions"                    : [ { "Ref" : "aspServerscaleDN" } ],
      "Dimensions"                      : [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "asgServergroup" } } ],
      "ComparisonOperator"              : "GreaterThanThreshold"
      }
    }
  }
}
